version: '3.8'

services:

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - clinic-net
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5000:80"
    networks:
      - clinic-net
    restart: unless-stopped

  config-server-ms:
    image: imrds7/config-server-ms:latest
    container_name: config-server-ms
    ports:
      - 8090:8090
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - clinic-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  servicereg:
    image: imrds7/servicereg:latest
    container_name: servicereg
    ports:
      - "8761:8761"
    depends_on:
      - zipkin
      - postgres
      - pgadmin
    networks:
      - microservice-network
      - clinic-net

  appointmentms:
    image: imrds7/appointmentms:latest
    container_name: appointment
    ports:
      - 8083:8083
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - clinic-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  doctorms:
    image: imrds7/doctorms:latest
    container_name: doctor
    ports:
      - 8081:8081
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - clinic-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://servicereg:8761/eureka
    volumes:
      - ./logs/doctorms:/logs/doctorms


  patientms:
    image: imrds7/patientms:latest
    container_name: patient
    ports:
      - 8082:8082
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - clinic-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - 9411:9411
    networks:
      - clinic-net
      - microservice-network

  gateway-ms:
    image: imrds7/gateway-ms:latest
    container_name: gateway-ms
    ports:
      - 8084:8084
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - clinic-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - microservice-network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.0
    container_name: logstash
    volumes:
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline
      - ./logs:/usr/share/logstash/logs
    ports:
      - "5020:5020"
    depends_on:
      - elasticsearch
    networks:
      - microservice-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - microservice-network





networks:
  microservice-network:
    driver: bridge
  clinic-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  esdata:
